// <auto-generated />
using System;
using Handyman.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Handyman.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AddressCustomerProfile", b =>
                {
                    b.Property<int>("AddressesId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerProfileId")
                        .HasColumnType("int");

                    b.HasKey("AddressesId", "CustomerProfileId");

                    b.HasIndex("CustomerProfileId");

                    b.ToTable("AddressCustomerProfile");
                });

            modelBuilder.Entity("Handyman.Data.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProviderProfileId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProviderProfileId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Handyman.Data.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("AppointmentImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<TimeSpan>("AppointmentTime")
                        .HasColumnType("time");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CustomerProfileId")
                        .HasColumnType("int");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProviderProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("ProviderServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerProfileId");

                    b.HasIndex("ProviderProfileId");

                    b.HasIndex("ProviderServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Handyman.Data.Entities.AppointmentFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("ProviderProfileId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("CustomerProfileId");

                    b.HasIndex("ProviderProfileId");

                    b.ToTable("AppointmentFeedbacks");
                });

            modelBuilder.Entity("Handyman.Data.Entities.CustomerProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Preferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("CustomerProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Preferences = "Weekly lawn mowing",
                            ProfileId = 1
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Preferences = "Monthly house cleaning",
                            ProfileId = 2
                        });
                });

            modelBuilder.Entity("Handyman.Data.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("CustomerProfileId")
                        .HasColumnType("int");

                    b.Property<string>("ExpiryDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProviderProfileId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerProfileId");

                    b.HasIndex("ProviderProfileId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Handyman.Data.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfileImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "123 Main St, Anytown, USA",
                            CreatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(1657),
                            Email = "john.doe@example.com",
                            FullName = "John Doe",
                            Password = "jhon123",
                            PhoneNumber = "123-456-7890",
                            Role = "Customer",
                            UpdatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(1659),
                            UserId = "customer1"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "456 Elm St, Othertown, USA",
                            CreatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(1661),
                            Email = "jane.smith@example.com",
                            FullName = "Jane Smith",
                            Password = "jane123",
                            PhoneNumber = "987-654-3210",
                            Role = "Customer",
                            UpdatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(1662),
                            UserId = "customer2"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "789 Oak St, Sometown, USA",
                            CreatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(1664),
                            Email = "mike.johnson@example.com",
                            FullName = "Mike Johnson",
                            Password = "mike123",
                            PhoneNumber = "555-123-4567",
                            Role = "Provider",
                            UpdatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(1664),
                            UserId = "provider1"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Address = "321 Pine St, Anothertown, USA",
                            CreatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(1666),
                            Email = "emily.davis@example.com",
                            FullName = "Emily Davis",
                            Password = "emily123",
                            PhoneNumber = "555-987-6543",
                            Role = "Provider",
                            UpdatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(1666),
                            UserId = "provider2"
                        });
                });

            modelBuilder.Entity("Handyman.Data.Entities.ProviderProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Balance")
                        .HasColumnType("int");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServicesOffered")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("ProviderProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Availability = "Mon-Fri 9am-5pm",
                            Balance = 0,
                            ProfileId = "provider1",
                            Rating = 4.5m,
                            ServicesOffered = "Lawn Mowing, Hedge Trimming"
                        },
                        new
                        {
                            Id = 2,
                            Availability = "Sat-Sun 10am-4pm",
                            Balance = 0,
                            ProfileId = "provider2",
                            Rating = 4.8m,
                            ServicesOffered = "House Cleaning, Carpet Cleaning"
                        });
                });

            modelBuilder.Entity("Handyman.Data.Entities.ProviderService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderProfileId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProviderProfileId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ProviderServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(2057),
                            ImageUrl = "https://example.com/images/lawn_mowing.jpg",
                            Notes = "Experienced in lawn mowing with professional equipment.",
                            ProviderProfileId = 1,
                            ServiceId = 1,
                            UpdatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(2058)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(2060),
                            ImageUrl = "https://example.com/images/house_cleaning.jpg",
                            Notes = "Thorough house cleaning services with eco-friendly products.",
                            ProviderProfileId = 2,
                            ServiceId = 3,
                            UpdatedAt = new DateTime(2025, 4, 3, 23, 29, 16, 122, DateTimeKind.Utc).AddTicks(2060)
                        });
                });

            modelBuilder.Entity("Handyman.Data.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 50.0m,
                            Description = "Lawn care, landscaping, and gardening tasks.",
                            ImageUrl = "/images/serviceImages/LawnServices.jpg",
                            IsDeleted = false,
                            Name = "Yardwork",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cost = 75.0m,
                            Description = "Basic home repairs like fixing leaks and broken fixtures.",
                            ImageUrl = "/images/serviceImages/PlumbingServices.jpg",
                            IsDeleted = false,
                            Name = "Minor Home Repair",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Cost = 100.0m,
                            Description = "Assembling furniture from flat-pack kits.",
                            ImageUrl = "/images/serviceImages/IKEAServices.jpg",
                            IsDeleted = false,
                            Name = "Furniture Assembly",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Cost = 60.0m,
                            Description = "Clearing snow from driveways, walkways, and roofs.",
                            ImageUrl = "/images/serviceImages/WinterServices.jpg",
                            IsDeleted = false,
                            Name = "Snow Removal",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Cost = 120.0m,
                            Description = "Mounting your TV on the wall for a clean look.",
                            ImageUrl = "/images/serviceImages/TVMountingServices.jpg",
                            IsDeleted = false,
                            Name = "TV Mounting",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Cost = 80.0m,
                            Description = "Assisting with moving furniture or boxes.",
                            ImageUrl = "/images/serviceImages/MovingServices.jpg",
                            IsDeleted = false,
                            Name = "Help Moving",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            Cost = 90.0m,
                            Description = "General home repairs and maintenance tasks.",
                            ImageUrl = "/images/serviceImages/GeneralServices.jpg",
                            IsDeleted = false,
                            Name = "Handyman",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 8,
                            Cost = 150.0m,
                            Description = "Interior and exterior painting services.",
                            ImageUrl = "/images/serviceImages/PaintingServices.jpg",
                            IsDeleted = false,
                            Name = "Painting",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 9,
                            Cost = 100.0m,
                            Description = "Installing light fixtures and bulbs.",
                            ImageUrl = "/images/serviceImages/LightingServices.jpg",
                            IsDeleted = false,
                            Name = "Lighting Installation",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 10,
                            Cost = 50.0m,
                            Description = "Hanging artwork or pictures on walls.",
                            ImageUrl = "/images/serviceImages/PaintingMountingServices.jpg",
                            IsDeleted = false,
                            Name = "Hang Pictures",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 11,
                            Cost = 100.0m,
                            Description = "Assembly and delivery of IKEA furniture.",
                            ImageUrl = "/images/serviceImages/IKEAServices.jpg",
                            IsDeleted = false,
                            Name = "IKEA Services",
                            ServiceTypeId = 1
                        },
                        new
                        {
                            Id = 12,
                            Cost = 60.0m,
                            Description = "Deliver packages or goods to your location.",
                            ImageUrl = "/images/serviceImages/DeliveryServices.jpg",
                            IsDeleted = false,
                            Name = "Delivery",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 13,
                            Cost = 120.0m,
                            Description = "General home repair services like plumbing, electrical work, etc.",
                            ImageUrl = "/images/serviceImages/PlumbingServices.jpg",
                            IsDeleted = false,
                            Name = "Home Repairs",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 14,
                            Cost = 80.0m,
                            Description = "Basic home or office cleaning services.",
                            ImageUrl = "/images/serviceImages/OrganizeOfficeServices.jpg",
                            IsDeleted = false,
                            Name = "General Cleaning",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 15,
                            Cost = 90.0m,
                            Description = "Assembling furniture like desks, chairs, or tables.",
                            ImageUrl = "/images/serviceImages/IKEAServices.jpg",
                            IsDeleted = false,
                            Name = "Assemble Furniture",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 16,
                            Cost = 100.0m,
                            Description = "Help with moving or hauling large items.",
                            ImageUrl = "/images/serviceImages/MovingServices.jpg",
                            IsDeleted = false,
                            Name = "Help Moving / Hauling",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 17,
                            Cost = 80.0m,
                            Description = "Lifting and transporting heavy objects.",
                            ImageUrl = "/images/serviceImages/HeavyLiftingServices.jpg",
                            IsDeleted = false,
                            Name = "Heavy Lifting",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 18,
                            Cost = 100.0m,
                            Description = "Personal errands and assistance for daily tasks.",
                            ImageUrl = "/images/serviceImages/PersonalAssistantServices.jpg",
                            IsDeleted = false,
                            Name = "Personal Assistant",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 19,
                            Cost = 70.0m,
                            Description = "Outdoor maintenance including lawn mowing and trimming.",
                            ImageUrl = "/images/serviceImages/LawnServices.jpg",
                            IsDeleted = false,
                            Name = "Yard Work",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 20,
                            Cost = 40.0m,
                            Description = "Waiting in line for tickets, products, or services.",
                            ImageUrl = "/images/serviceImages/WaitingInQueueServices.jpg",
                            IsDeleted = false,
                            Name = "Queue in Line",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 21,
                            Cost = 80.0m,
                            Description = "Organizing your closet space for a more efficient setup.",
                            ImageUrl = "/images/serviceImages/OrganizeClosetServices.jpg",
                            IsDeleted = false,
                            Name = "Organize Closet",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 22,
                            Cost = 90.0m,
                            Description = "Office tasks like data entry, document management, etc.",
                            ImageUrl = "/images/serviceImages/OfficeAdminServices.jpg",
                            IsDeleted = false,
                            Name = "Office Administration",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 23,
                            Cost = 75.0m,
                            Description = "Organizing personal spaces, offices, or garages.",
                            ImageUrl = "/images/serviceImages/OrganizeOfficeServices.jpg",
                            IsDeleted = false,
                            Name = "Organization",
                            ServiceTypeId = 2
                        },
                        new
                        {
                            Id = 24,
                            Cost = 120.0m,
                            Description = "General home repair services like plumbing, electrical work, etc.",
                            ImageUrl = "/images/serviceImages/CarpentryServices.jpg",
                            IsDeleted = false,
                            Name = "Home Repairs",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 25,
                            Cost = 90.0m,
                            Description = "Assembling furniture like desks, chairs, or tables.",
                            ImageUrl = "/images/serviceImages/AssemblyServices.jpg",
                            IsDeleted = false,
                            Name = "Assemble Furniture",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 26,
                            Cost = 120.0m,
                            Description = "Mounting your TV on the wall for a clean look.",
                            ImageUrl = "/images/serviceImages/TVMountingServices.jpg",
                            IsDeleted = false,
                            Name = "TV Mounting",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 27,
                            Cost = 80.0m,
                            Description = "Lifting and transporting heavy objects.",
                            ImageUrl = "/images/serviceImages/HeavyLiftingServices.jpg",
                            IsDeleted = false,
                            Name = "Heavy Lifting",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 28,
                            Cost = 150.0m,
                            Description = "Interior and exterior painting services.",
                            ImageUrl = "/images/serviceImages/PaintingServices.jpg",
                            IsDeleted = false,
                            Name = "Painting",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 29,
                            Cost = 130.0m,
                            Description = "General plumbing repairs and installations.",
                            ImageUrl = "/images/serviceImages/PlumbingServices.jpg",
                            IsDeleted = false,
                            Name = "Plumbing",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 30,
                            Cost = 70.0m,
                            Description = "Outdoor maintenance including lawn mowing and trimming.",
                            ImageUrl = "/images/serviceImages/LawnServices.jpg",
                            IsDeleted = false,
                            Name = "Yard Work",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 31,
                            Cost = 50.0m,
                            Description = "Hanging artwork or pictures on walls.",
                            ImageUrl = "/images/serviceImages/PaintingMountainServices.jpg",
                            IsDeleted = false,
                            Name = "Hang Pictures",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 32,
                            Cost = 100.0m,
                            Description = "Mounting shelves on walls for storage and decoration.",
                            ImageUrl = "/images/serviceImages/ShelfMountingServices.jpg",
                            IsDeleted = false,
                            Name = "Shelf Mounting",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 33,
                            Cost = 100.0m,
                            Description = "Installing light fixtures and bulbs.",
                            ImageUrl = "/images/serviceImages/LightingServices.jpg",
                            IsDeleted = false,
                            Name = "Light Installation",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 34,
                            Cost = 150.0m,
                            Description = "Electrical installations and repairs.",
                            ImageUrl = "/images/serviceImages/ElectricalServices.jpg",
                            IsDeleted = false,
                            Name = "Electrical Work",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 35,
                            Cost = 200.0m,
                            Description = "Custom woodwork and carpentry services.",
                            ImageUrl = "/images/serviceImages/CarpentryServices.jpg",
                            IsDeleted = false,
                            Name = "Carpentry",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 36,
                            Cost = 80.0m,
                            Description = "Child-proofing your home with safety measures.",
                            ImageUrl = "/images/serviceImages/BabyProofingServices.jpg",
                            IsDeleted = false,
                            Name = "Baby Proofing",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 37,
                            Cost = 180.0m,
                            Description = "Installation of smart devices like thermostats, cameras, etc.",
                            ImageUrl = "/images/serviceImages/SmartHomeServices.jpg",
                            IsDeleted = false,
                            Name = "Smart Home Installation",
                            ServiceTypeId = 3
                        },
                        new
                        {
                            Id = 38,
                            Cost = 100.0m,
                            Description = "Help with moving or hauling large items.",
                            ImageUrl = "/images/serviceImages/MovingServices.jpg",
                            IsDeleted = false,
                            Name = "Help Moving / Hauling",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 39,
                            Cost = 75.0m,
                            Description = "Moving a single item, like a couch or appliance.",
                            ImageUrl = "/images/serviceImages/MovingServices.jpg",
                            IsDeleted = false,
                            Name = "One Item Movers",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 40,
                            Cost = 150.0m,
                            Description = "Moving large furniture from one location to another.",
                            ImageUrl = "/images/serviceImages/MovingServices.jpg",
                            IsDeleted = false,
                            Name = "Furniture Movers",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 41,
                            Cost = 80.0m,
                            Description = "Removal and disposal of unwanted items or junk.",
                            ImageUrl = "/images/serviceImages/JunkRemovalServices.jpg",
                            IsDeleted = false,
                            Name = "Junk Removal",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 42,
                            Cost = 300.0m,
                            Description = "Complete moving service, including packing, loading, and unloading.",
                            ImageUrl = "/images/serviceImages/MovingServices.jpg",
                            IsDeleted = false,
                            Name = "Full Service Movers",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 43,
                            Cost = 250.0m,
                            Description = "Packing up your home and moving everything to your new location.",
                            ImageUrl = "/images/serviceImages/MovingServices.jpg",
                            IsDeleted = false,
                            Name = "Packing and Moving Services",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 44,
                            Cost = 150.0m,
                            Description = "Unpacking boxes and organizing items in your new home.",
                            ImageUrl = "/images/serviceImages/MovingServices.jpg",
                            IsDeleted = false,
                            Name = "Unpacking Services",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 45,
                            Cost = 80.0m,
                            Description = "Lifting and transporting heavy objects.",
                            ImageUrl = "/images/serviceImages/HeavyLiftingServices.jpg",
                            IsDeleted = false,
                            Name = "Heavy Lifting",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 46,
                            Cost = 90.0m,
                            Description = "Removal of old furniture that needs to be disposed of.",
                            ImageUrl = "/images/serviceImages/MovingServices.jpg",
                            IsDeleted = false,
                            Name = "Furniture Removal",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 47,
                            Cost = 75.0m,
                            Description = "Removal of an old couch or sofa.",
                            ImageUrl = "/images/serviceImages/MovingServices.jpg",
                            IsDeleted = false,
                            Name = "Couch Removal",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 48,
                            Cost = 100.0m,
                            Description = "Assisting in moving furniture up or down stairs.",
                            ImageUrl = "/images/serviceImages/HeavyLiftingServices.jpg",
                            IsDeleted = false,
                            Name = "Move Furniture Up/Downstairs",
                            ServiceTypeId = 4
                        },
                        new
                        {
                            Id = 49,
                            Cost = 120.0m,
                            Description = "Decorating your home with Christmas lights.",
                            ImageUrl = "/images/serviceImages/WinterServices.jpg",
                            IsDeleted = false,
                            Name = "Hang Christmas Lights",
                            ServiceTypeId = 5
                        },
                        new
                        {
                            Id = 50,
                            Cost = 80.0m,
                            Description = "Delivery of a Christmas tree to your home.",
                            ImageUrl = "/images/serviceImages/WinterServices.jpg",
                            IsDeleted = false,
                            Name = "Christmas Tree Delivery",
                            ServiceTypeId = 5
                        },
                        new
                        {
                            Id = 51,
                            Cost = 150.0m,
                            Description = "Decorating your home for the holidays.",
                            ImageUrl = "/images/serviceImages/ChristmasServices.jpg",
                            IsDeleted = false,
                            Name = "Christmas Decorating",
                            ServiceTypeId = 5
                        },
                        new
                        {
                            Id = 52,
                            Cost = 100.0m,
                            Description = "Shopping for holiday gifts or groceries.",
                            ImageUrl = "/images/serviceImages/WinterServices.jpg",
                            IsDeleted = false,
                            Name = "Shopping",
                            ServiceTypeId = 5
                        },
                        new
                        {
                            Id = 53,
                            Cost = 150.0m,
                            Description = "Complete shopping for the holidays.",
                            ImageUrl = "/images/serviceImages/ChristmasServices.jpg",
                            IsDeleted = false,
                            Name = "Holiday Shopping",
                            ServiceTypeId = 5
                        },
                        new
                        {
                            Id = 54,
                            Cost = 50.0m,
                            Description = "Wrapping your holiday gifts.",
                            ImageUrl = "/images/serviceImages/ChristmasServices.jpg",
                            IsDeleted = false,
                            Name = "Gifts Wrapping",
                            ServiceTypeId = 5
                        },
                        new
                        {
                            Id = 55,
                            Cost = 80.0m,
                            Description = "Holiday grocery shopping.",
                            ImageUrl = "/images/serviceImages/ChristmasServices.jpg",
                            IsDeleted = false,
                            Name = "Grocery Shopping",
                            ServiceTypeId = 5
                        },
                        new
                        {
                            Id = 56,
                            Cost = 100.0m,
                            Description = "Shopping for holiday gifts.",
                            ImageUrl = "/images/serviceImages/ChristmasServices.jpg",
                            IsDeleted = false,
                            Name = "Gift Shopping",
                            ServiceTypeId = 5
                        },
                        new
                        {
                            Id = 57,
                            Cost = 90.0m,
                            Description = "Assembling furniture like desks, chairs, or tables.",
                            ImageUrl = "/images/serviceImages/AssemblyServices.jpg",
                            IsDeleted = false,
                            Name = "Furniture Assembly",
                            ServiceTypeId = 6
                        },
                        new
                        {
                            Id = 58,
                            Cost = 100.0m,
                            Description = "Assembling IKEA flat-pack furniture.",
                            ImageUrl = "/images/serviceImages/IKEAServices.jpg",
                            IsDeleted = false,
                            Name = "IKEA Furniture Assembly",
                            ServiceTypeId = 6
                        },
                        new
                        {
                            Id = 59,
                            Cost = 100.0m,
                            Description = "Assembling kids furniture like cribs, dressers, etc.",
                            ImageUrl = "/images/serviceImages/AssemblyServices.jpg",
                            IsDeleted = false,
                            Name = "Assembly of Kids Furniture",
                            ServiceTypeId = 6
                        },
                        new
                        {
                            Id = 60,
                            Cost = 120.0m,
                            Description = "Assembling office furniture like desks and chairs.",
                            ImageUrl = "/images/serviceImages/AssemblyServices.jpg",
                            IsDeleted = false,
                            Name = "Office Furniture Assembly",
                            ServiceTypeId = 6
                        },
                        new
                        {
                            Id = 61,
                            Cost = 150.0m,
                            Description = "Assembling outdoor sheds or storage units.",
                            ImageUrl = "/images/serviceImages/AssemblyServices.jpg",
                            IsDeleted = false,
                            Name = "Shed Assembly",
                            ServiceTypeId = 6
                        },
                        new
                        {
                            Id = 62,
                            Cost = 60.0m,
                            Description = "Clearing snow from driveways, walkways, and roofs.",
                            ImageUrl = "/images/serviceImages/WinterServices.jpg",
                            IsDeleted = false,
                            Name = "Snow Removal",
                            ServiceTypeId = 7
                        },
                        new
                        {
                            Id = 63,
                            Cost = 50.0m,
                            Description = "Applying ice-melting substances to prevent slips and falls.",
                            ImageUrl = "/images/serviceImages/AssemblyServices.jpg",
                            IsDeleted = false,
                            Name = "Ice Melting",
                            ServiceTypeId = 7
                        },
                        new
                        {
                            Id = 64,
                            Cost = 150.0m,
                            Description = "Preparing your property for winter by sealing windows, pipes, etc.",
                            ImageUrl = "/images/serviceImages/AssemblyServices.jpg",
                            IsDeleted = false,
                            Name = "Winterizing Property",
                            ServiceTypeId = 7
                        },
                        new
                        {
                            Id = 65,
                            Cost = 100.0m,
                            Description = "Cleaning leaves and debris from gutters to prevent blockages.",
                            ImageUrl = "/images/serviceImages/GeneralServices.jpg",
                            IsDeleted = false,
                            Name = "Gutter Cleaning",
                            ServiceTypeId = 7
                        },
                        new
                        {
                            Id = 66,
                            Cost = 70.0m,
                            Description = "Shoveling snow off driveways to ensure safe access.",
                            ImageUrl = "/images/serviceImages/WinterServices.jpg",
                            IsDeleted = false,
                            Name = "Shoveling Driveways",
                            ServiceTypeId = 7
                        },
                        new
                        {
                            Id = 67,
                            Cost = 120.0m,
                            Description = "Protecting pipes from freezing by insulating or draining them.",
                            ImageUrl = "/images/serviceImages/PlumbingServices.jpg",
                            IsDeleted = false,
                            Name = "Winterizing Plumbing",
                            ServiceTypeId = 7
                        },
                        new
                        {
                            Id = 68,
                            Cost = 80.0m,
                            Description = "Maintaining your lawn with mowing, fertilization, and watering.",
                            ImageUrl = "/images/serviceImages/LawnServices.jpg",
                            IsDeleted = false,
                            Name = "Lawn Care",
                            ServiceTypeId = 8
                        },
                        new
                        {
                            Id = 69,
                            Cost = 120.0m,
                            Description = "Trimming trees and removing dead branches for safety and appearance.",
                            ImageUrl = "/images/serviceImages/LawnServices.jpg",
                            IsDeleted = false,
                            Name = "Tree Pruning",
                            ServiceTypeId = 8
                        },
                        new
                        {
                            Id = 70,
                            Cost = 60.0m,
                            Description = "Raking and removing fallen leaves from yards and lawns.",
                            ImageUrl = "/images/serviceImages/LawnServices.jpg",
                            IsDeleted = false,
                            Name = "Leaf Raking",
                            ServiceTypeId = 8
                        },
                        new
                        {
                            Id = 71,
                            Cost = 50.0m,
                            Description = "Mowing your lawn to maintain a neat and healthy yard.",
                            ImageUrl = "/images/serviceImages/LawnServices.jpg",
                            IsDeleted = false,
                            Name = "Lawn Mowing",
                            ServiceTypeId = 8
                        },
                        new
                        {
                            Id = 72,
                            Cost = 90.0m,
                            Description = "Planting and caring for flowers, shrubs, and vegetable gardens.",
                            ImageUrl = "/images/serviceImages/LawnServices.jpg",
                            IsDeleted = false,
                            Name = "Gardening",
                            ServiceTypeId = 8
                        },
                        new
                        {
                            Id = 73,
                            Cost = 100.0m,
                            Description = "Applying mulch to garden beds to retain moisture and suppress weeds.",
                            ImageUrl = "/images/serviceImages/LawnServices.jpg",
                            IsDeleted = false,
                            Name = "Mulching",
                            ServiceTypeId = 8
                        },
                        new
                        {
                            Id = 74,
                            Cost = 150.0m,
                            Description = "Thorough cleaning of all surfaces, including hard-to-reach areas.",
                            ImageUrl = "/images/serviceImages/CleaningServices.jpg",
                            IsDeleted = false,
                            Name = "Deep Cleaning",
                            ServiceTypeId = 9
                        },
                        new
                        {
                            Id = 75,
                            Cost = 120.0m,
                            Description = "Cleaning office spaces, including desks, floors, and windows.",
                            ImageUrl = "/images/serviceImages/CleaningServices.jpg",
                            IsDeleted = false,
                            Name = "Office Cleaning",
                            ServiceTypeId = 9
                        },
                        new
                        {
                            Id = 76,
                            Cost = 100.0m,
                            Description = "Deep cleaning carpets to remove stains, dirt, and odors.",
                            ImageUrl = "/images/serviceImages/CleaningServices.jpg",
                            IsDeleted = false,
                            Name = "Carpet Cleaning",
                            ServiceTypeId = 9
                        },
                        new
                        {
                            Id = 77,
                            Cost = 80.0m,
                            Description = "Cleaning both interior and exterior windows for clarity and shine.",
                            ImageUrl = "/images/serviceImages/CleaningServices.jpg",
                            IsDeleted = false,
                            Name = "Window Cleaning",
                            ServiceTypeId = 9
                        },
                        new
                        {
                            Id = 78,
                            Cost = 150.0m,
                            Description = "Cleaning a home or apartment when moving in or out.",
                            ImageUrl = "/images/serviceImages/CleaningServices.jpg",
                            IsDeleted = false,
                            Name = "Move-In/Move-Out Cleaning",
                            ServiceTypeId = 9
                        },
                        new
                        {
                            Id = 79,
                            Cost = 120.0m,
                            Description = "Using high-pressure water to clean outdoor surfaces like driveways and patios.",
                            ImageUrl = "/images/serviceImages/CleaningServices.jpg",
                            IsDeleted = false,
                            Name = "Pressure Washing",
                            ServiceTypeId = 9
                        },
                        new
                        {
                            Id = 80,
                            Cost = 180.0m,
                            Description = "Cleaning up debris, dust, and materials left after construction or renovation.",
                            ImageUrl = "/images/serviceImages/CleaningServices.jpg",
                            IsDeleted = false,
                            Name = "Post-Construction Cleaning",
                            ServiceTypeId = 9
                        },
                        new
                        {
                            Id = 81,
                            Cost = 50.0m,
                            Description = "Shopping for groceries and delivering them to your doorstep.",
                            ImageUrl = "/images/serviceImages/PersonalAssistantServices.jpg",
                            IsDeleted = false,
                            Name = "Grocery Shopping",
                            ServiceTypeId = 10
                        },
                        new
                        {
                            Id = 82,
                            Cost = 75.0m,
                            Description = "Shopping for gifts based on your preferences and budget.",
                            ImageUrl = "/images/serviceImages/PersonalAssistantServices.jpg",
                            IsDeleted = false,
                            Name = "Gift Shopping",
                            ServiceTypeId = 10
                        },
                        new
                        {
                            Id = 83,
                            Cost = 60.0m,
                            Description = "Picking up and delivering packages to your location.",
                            ImageUrl = "/images/serviceImages/DeliveryServices.jpg",
                            IsDeleted = false,
                            Name = "Package Pickup & Delivery",
                            ServiceTypeId = 10
                        },
                        new
                        {
                            Id = 84,
                            Cost = 100.0m,
                            Description = "Assisting with shopping for clothes, gifts, or other personal items.",
                            ImageUrl = "/images/serviceImages/PersonalAssistantServices.jpg",
                            IsDeleted = false,
                            Name = "Personal Shopping Assistant",
                            ServiceTypeId = 10
                        },
                        new
                        {
                            Id = 85,
                            Cost = 70.0m,
                            Description = "Running errands like picking up dry cleaning or post office trips.",
                            ImageUrl = "/images/serviceImages/PersonalAssistantServices.jpg",
                            IsDeleted = false,
                            Name = "Errand Running",
                            ServiceTypeId = 10
                        },
                        new
                        {
                            Id = 86,
                            Cost = 55.0m,
                            Description = "Grocery shopping and delivery without physical interaction.",
                            ImageUrl = "/images/serviceImages/DeliveryServices.jpg",
                            IsDeleted = false,
                            Name = "Contactless Grocery Shopping",
                            ServiceTypeId = 11
                        },
                        new
                        {
                            Id = 87,
                            Cost = 95.0m,
                            Description = "Furniture assembly with minimal or no physical contact.",
                            ImageUrl = "/images/serviceImages/AssemblyServices.jpg",
                            IsDeleted = false,
                            Name = "Contactless Furniture Assembly",
                            ServiceTypeId = 11
                        },
                        new
                        {
                            Id = 88,
                            Cost = 55.0m,
                            Description = "Delivering packages or groceries without in-person contact.",
                            ImageUrl = "/images/serviceImages/DeliveryServices.jpg",
                            IsDeleted = false,
                            Name = "Contactless Delivery",
                            ServiceTypeId = 11
                        },
                        new
                        {
                            Id = 89,
                            Cost = 120.0m,
                            Description = "Cleaning services performed with social distancing and minimal contact.",
                            ImageUrl = "/images/serviceImages/CleaningServices.jpg",
                            IsDeleted = false,
                            Name = "Contactless Cleaning",
                            ServiceTypeId = 11
                        },
                        new
                        {
                            Id = 90,
                            Cost = 100.0m,
                            Description = "Assembling IKEA furniture with ease and efficiency.",
                            ImageUrl = "/images/serviceImages/IKEAServices.jpg",
                            IsDeleted = false,
                            Name = "IKEA Furniture Assembly",
                            ServiceTypeId = 12
                        },
                        new
                        {
                            Id = 91,
                            Cost = 120.0m,
                            Description = "Picking up and delivering IKEA furniture or products to your home.",
                            ImageUrl = "/images/serviceImages/IKEAServices.jpg",
                            IsDeleted = false,
                            Name = "IKEA Pickup & Delivery",
                            ServiceTypeId = 12
                        },
                        new
                        {
                            Id = 92,
                            Cost = 150.0m,
                            Description = "Installing IKEA furniture and home solutions in your space.",
                            ImageUrl = "/images/serviceImages/IKEAServices.jpg",
                            IsDeleted = false,
                            Name = "IKEA Home Installation",
                            ServiceTypeId = 12
                        },
                        new
                        {
                            Id = 93,
                            Cost = 120.0m,
                            Description = "Mounting your TV on the wall for a sleek and modern look.",
                            ImageUrl = "/images/serviceImages/TVMountingServices.jpg",
                            IsDeleted = false,
                            Name = "TV Mounting",
                            ServiceTypeId = 13
                        },
                        new
                        {
                            Id = 94,
                            Cost = 50.0m,
                            Description = "Hanging artwork, mirrors, or other pictures on your walls.",
                            ImageUrl = "/images/serviceImages/PaintingMountingServices.jpg",
                            IsDeleted = false,
                            Name = "Picture Hanging",
                            ServiceTypeId = 13
                        },
                        new
                        {
                            Id = 95,
                            Cost = 100.0m,
                            Description = "Installing shelves to maximize storage space in your home.",
                            ImageUrl = "/images/serviceImages/ShelfMountingServices.jpg",
                            IsDeleted = false,
                            Name = "Shelving Installation",
                            ServiceTypeId = 13
                        },
                        new
                        {
                            Id = 96,
                            Cost = 120.0m,
                            Description = "Installing or replacing light fixtures throughout your home.",
                            ImageUrl = "/images/serviceImages/LightingServices.jpg",
                            IsDeleted = false,
                            Name = "Light Fixture Installation",
                            ServiceTypeId = 13
                        },
                        new
                        {
                            Id = 97,
                            Cost = 80.0m,
                            Description = "Installing curtain rods for your windows.",
                            ImageUrl = "/images/serviceTypeImages/MountingInstallationServiceType.jpg",
                            IsDeleted = false,
                            Name = "Curtain Rod Installation",
                            ServiceTypeId = 13
                        });
                });

            modelBuilder.Entity("Handyman.Data.Entities.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Most commonly requested services.",
                            IsDeleted = false,
                            Name = "Popular Tasks"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Handpicked services for special needs.",
                            IsDeleted = false,
                            Name = "Featured Tasks"
                        },
                        new
                        {
                            Id = 3,
                            Description = "General handyman and repair services.",
                            IsDeleted = false,
                            Name = "Handyman Services"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Services for helping with moving and hauling.",
                            IsDeleted = false,
                            Name = "Moving Services"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Services related to holiday preparations.",
                            IsDeleted = false,
                            Name = "Holiday Help"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Services for assembling furniture.",
                            IsDeleted = false,
                            Name = "Furniture Assembly"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Services for winter-related tasks.",
                            IsDeleted = false,
                            Name = "Winter Tasks"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Services for lawn and garden care.",
                            IsDeleted = false,
                            Name = "Yard Work"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Cleaning and disinfecting services.",
                            IsDeleted = false,
                            Name = "Cleaning"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Services related to shopping and delivery.",
                            IsDeleted = false,
                            Name = "Shopping & Delivery"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Services that can be performed contactlessly.",
                            IsDeleted = false,
                            Name = "Contactless Tasks"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Services related to IKEA products.",
                            IsDeleted = false,
                            Name = "IKEA Services"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Mounting and installation tasks.",
                            IsDeleted = false,
                            Name = "Mounting & Installation"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AddressCustomerProfile", b =>
                {
                    b.HasOne("Handyman.Data.Entities.Address", null)
                        .WithMany()
                        .HasForeignKey("AddressesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Handyman.Data.Entities.CustomerProfile", null)
                        .WithMany()
                        .HasForeignKey("CustomerProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Handyman.Data.Entities.Address", b =>
                {
                    b.HasOne("Handyman.Data.Entities.ProviderProfile", null)
                        .WithMany("Addresses")
                        .HasForeignKey("ProviderProfileId");
                });

            modelBuilder.Entity("Handyman.Data.Entities.Appointment", b =>
                {
                    b.HasOne("Handyman.Data.Entities.CustomerProfile", null)
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerProfileId");

                    b.HasOne("Handyman.Data.Entities.ProviderProfile", null)
                        .WithMany("Appointments")
                        .HasForeignKey("ProviderProfileId");

                    b.HasOne("Handyman.Data.Entities.ProviderService", null)
                        .WithMany("Appointments")
                        .HasForeignKey("ProviderServiceId");

                    b.HasOne("Handyman.Data.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Handyman.Data.Entities.AppointmentFeedback", b =>
                {
                    b.HasOne("Handyman.Data.Entities.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Handyman.Data.Entities.CustomerProfile", "CustomerProfile")
                        .WithMany("AppointmentFeedbacks")
                        .HasForeignKey("CustomerProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Handyman.Data.Entities.ProviderProfile", "ProviderProfile")
                        .WithMany("AppointmentFeedbacks")
                        .HasForeignKey("ProviderProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("CustomerProfile");

                    b.Navigation("ProviderProfile");
                });

            modelBuilder.Entity("Handyman.Data.Entities.CustomerProfile", b =>
                {
                    b.HasOne("Handyman.Data.Entities.Profile", "Profile")
                        .WithOne("CustomerProfile")
                        .HasForeignKey("Handyman.Data.Entities.CustomerProfile", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Handyman.Data.Entities.Payment", b =>
                {
                    b.HasOne("Handyman.Data.Entities.CustomerProfile", null)
                        .WithMany("Payments")
                        .HasForeignKey("CustomerProfileId");

                    b.HasOne("Handyman.Data.Entities.ProviderProfile", null)
                        .WithMany("Payments")
                        .HasForeignKey("ProviderProfileId");
                });

            modelBuilder.Entity("Handyman.Data.Entities.ProviderProfile", b =>
                {
                    b.HasOne("Handyman.Data.Entities.Profile", "Profile")
                        .WithOne("ProviderProfile")
                        .HasForeignKey("Handyman.Data.Entities.ProviderProfile", "ProfileId")
                        .HasPrincipalKey("Handyman.Data.Entities.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Handyman.Data.Entities.ProviderService", b =>
                {
                    b.HasOne("Handyman.Data.Entities.ProviderProfile", "ProviderProfile")
                        .WithMany("ProviderServices")
                        .HasForeignKey("ProviderProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Handyman.Data.Entities.Service", "Service")
                        .WithMany("ProviderServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProviderProfile");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Handyman.Data.Entities.Service", b =>
                {
                    b.HasOne("Handyman.Data.Entities.ServiceType", "ServiceType")
                        .WithMany("Services")
                        .HasForeignKey("ServiceTypeId");

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Handyman.Data.Entities.CustomerProfile", b =>
                {
                    b.Navigation("AppointmentFeedbacks");

                    b.Navigation("Appointments");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Handyman.Data.Entities.Profile", b =>
                {
                    b.Navigation("CustomerProfile")
                        .IsRequired();

                    b.Navigation("ProviderProfile")
                        .IsRequired();
                });

            modelBuilder.Entity("Handyman.Data.Entities.ProviderProfile", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("AppointmentFeedbacks");

                    b.Navigation("Appointments");

                    b.Navigation("Payments");

                    b.Navigation("ProviderServices");
                });

            modelBuilder.Entity("Handyman.Data.Entities.ProviderService", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Handyman.Data.Entities.Service", b =>
                {
                    b.Navigation("ProviderServices");
                });

            modelBuilder.Entity("Handyman.Data.Entities.ServiceType", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
